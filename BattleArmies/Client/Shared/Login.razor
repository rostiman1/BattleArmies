@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IAuthService AuthService
@inject IToastService ToastService

    Please log in below or <a href="register">register</a> for a new account.
<EditForm Model="user" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator></DataAnnotationsValidator>
<div>
    <lablel for="email">Email</lablel>
    <InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>
</div>
<div>
    <lablel for="password">Password</lablel>
    <InputText id="password" @bind-Value="user.Password" class="form-control" type="password"></InputText>
</div>
<button type="submit" class="btn btn-primary">Login</button>
<ValidationSummary />
</EditForm>

@code {

    private UserLogin user = new UserLogin();

    private async void HandleLogin()
    {
        var result = await AuthService.Login(user);
        if (result.Success)
        {
            await LocalStorage.SetItemAsync<string>("authToken",result.Data);
            await AuthenticationStateProvider.GetAuthenticationStateAsync();
        }
        else
        {
            ToastService.ShowError(result.Message);
        }
        
    }
}
